// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// expec_log_x_cpp
double expec_log_x_cpp(NumericMatrix X, NumericVector phia, NumericMatrix zeta, int n_quest, int n_latent, int n_cat);
RcppExport SEXP _mixdir_expec_log_x_cpp(SEXP XSEXP, SEXP phiaSEXP, SEXP zetaSEXP, SEXP n_questSEXP, SEXP n_latentSEXP, SEXP n_catSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phia(phiaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_quest(n_questSEXP);
    Rcpp::traits::input_parameter< int >::type n_latent(n_latentSEXP);
    Rcpp::traits::input_parameter< int >::type n_cat(n_catSEXP);
    rcpp_result_gen = Rcpp::wrap(expec_log_x_cpp(X, phia, zeta, n_quest, n_latent, n_cat));
    return rcpp_result_gen;
END_RCPP
}
// update_zeta_cpp
NumericMatrix update_zeta_cpp(NumericMatrix zeta, NumericMatrix X, NumericVector phia, NumericVector omega, int n_ind, int n_quest, int n_latent, int n_cat);
RcppExport SEXP _mixdir_update_zeta_cpp(SEXP zetaSEXP, SEXP XSEXP, SEXP phiaSEXP, SEXP omegaSEXP, SEXP n_indSEXP, SEXP n_questSEXP, SEXP n_latentSEXP, SEXP n_catSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phia(phiaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    Rcpp::traits::input_parameter< int >::type n_quest(n_questSEXP);
    Rcpp::traits::input_parameter< int >::type n_latent(n_latentSEXP);
    Rcpp::traits::input_parameter< int >::type n_cat(n_catSEXP);
    rcpp_result_gen = Rcpp::wrap(update_zeta_cpp(zeta, X, phia, omega, n_ind, n_quest, n_latent, n_cat));
    return rcpp_result_gen;
END_RCPP
}
// update_zeta_dp_cpp
NumericMatrix update_zeta_dp_cpp(NumericMatrix zeta, NumericMatrix X, NumericVector phia, NumericVector kappa1, NumericVector kappa2, int n_ind, int n_quest, int n_latent, int n_cat);
RcppExport SEXP _mixdir_update_zeta_dp_cpp(SEXP zetaSEXP, SEXP XSEXP, SEXP phiaSEXP, SEXP kappa1SEXP, SEXP kappa2SEXP, SEXP n_indSEXP, SEXP n_questSEXP, SEXP n_latentSEXP, SEXP n_catSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phia(phiaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type kappa1(kappa1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type kappa2(kappa2SEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    Rcpp::traits::input_parameter< int >::type n_quest(n_questSEXP);
    Rcpp::traits::input_parameter< int >::type n_latent(n_latentSEXP);
    Rcpp::traits::input_parameter< int >::type n_cat(n_catSEXP);
    rcpp_result_gen = Rcpp::wrap(update_zeta_dp_cpp(zeta, X, phia, kappa1, kappa2, n_ind, n_quest, n_latent, n_cat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mixdir_expec_log_x_cpp", (DL_FUNC) &_mixdir_expec_log_x_cpp, 6},
    {"_mixdir_update_zeta_cpp", (DL_FUNC) &_mixdir_update_zeta_cpp, 8},
    {"_mixdir_update_zeta_dp_cpp", (DL_FUNC) &_mixdir_update_zeta_dp_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_mixdir(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
